<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ym.ssm.dao.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.ym.ssm.pojo.Employee" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="last_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="gender" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="dept_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <!--javaType="com.ym.ssm.pojoex.EmpoyeeStatus"-->
      <arg column="status" jdbcType="INTEGER" javaType="com.ym.ssm.pojoex.EmpoyeeStatus" typeHandler="com.ym.ssm.typeHandler.EmpoyeeStatusHandler" />
    </constructor>
    <!--<result column="status" property="status" javaType="com.ym.ssm.pojoex.EmpoyeeStatus"></result>-->
  </resultMap><!---->
  <sql id="Base_Column_List" >
    id, last_name, gender, email, dept_id, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from ym_employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ym_employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ym.ssm.pojo.Employee" >
    insert into ym_employee (id, last_name, gender, 
      email, dept_id, status
      )
    values (#{id,jdbcType=INTEGER}, #{lastName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{email,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER,javaType=com.ym.ssm.pojoex.EmpoyeeStatus,typeHandler=com.ym.ssm.typeHandler.EmpoyeeStatusHandler}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ym.ssm.pojo.Employee" >
    insert into ym_employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="lastName != null" >
        last_name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lastName != null" >
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ym.ssm.pojo.Employee" >
    update ym_employee
    <set >
      <if test="lastName != null" >
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ym.ssm.pojo.Employee" >
    update ym_employee
    set last_name = #{lastName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--自定义-->
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ym_employee
  </select>
  <parameterMap type="java.util.Map" id="employeePageMap">
    <parameter property="pageindex" mode="IN" jdbcType="INTEGER"/>
    <parameter property="pagesize" mode="IN" jdbcType="INTEGER"/>
    <parameter property="total" mode="OUT" jdbcType="INTEGER"/>
  </parameterMap>
  <select id="callProcedure" parameterMap="employeePageMap" statementType="CALLABLE" resultMap="BaseResultMap">
        CALL employeepage(?,?,?)
    </select>
</mapper>